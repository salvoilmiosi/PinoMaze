cmake_minimum_required(VERSION 3.13.0)
project(PinoMaze VERSION 0.1.0)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

add_library(sdl2_base INTERFACE)
add_library(sdl2_game INTERFACE)
if (MSVC)
    find_package(SDL2 REQUIRED)
    find_package(SDL2_image REQUIRED)
    find_package(SDL2_mixer REQUIRED)

    target_link_libraries(sdl2_base INTERFACE SDL2::SDL2 SDL2_image::SDL2_image)
    target_link_libraries(sdl2_game INTERFACE SDL2::SDL2_mixer::SDL2_mixer)
else()
    find_package(PkgConfig REQUIRED)
    pkg_check_modules(SDL2 REQUIRED sdl2 IMPORTED_TARGET)
    pkg_check_modules(SDL2_image REQUIRED SDL2_image IMPORTED_TARGET)
    pkg_check_modules(SDL2_mixer REQUIRED SDL2_mixer IMPORTED_TARGET)

    target_link_libraries(sdl2_base INTERFACE PkgConfig::SDL2 PkgConfig::SDL2_image)
    target_link_libraries(sdl2_game INTERFACE PkgConfig::SDL2_mixer)
endif()
target_link_libraries(sdl2_game INTERFACE sdl2_base)

find_package(GLEW REQUIRED)
find_package(GLM REQUIRED)

target_link_libraries(sdl2_game INTERFACE GLEW::glew)
target_include_directories(sdl2_game INTERFACE "${GLM_ICLUDE_DIRS}")

add_subdirectory(tinyfiledialogs)
add_subdirectory(resource_pack)

add_library(PinoMaze_shared STATIC)

target_link_libraries(PinoMaze_shared PUBLIC tinyfiledialogs resource_load)

if (WIN32)
    add_executable(PinoMaze_editor WIN32)
    if(CMAKE_BUILD_TYPE STREQUAL "Debug")
        if (MINGW)
            target_link_options(PinoMaze_editor PRIVATE -mconsole)
        elseif(MSVC)
            target_link_options(PinoMaze_editor PRIVATE /SUBSYSTEM:CONSOLE)
        endif()
    endif()
else()
    add_executable(PinoMaze_editor)
endif()
target_link_libraries(PinoMaze_editor PRIVATE PinoMaze_shared sdl2_base)

if (WIN32)
    add_executable(PinoMaze_game WIN32)
    if(CMAKE_BUILD_TYPE STREQUAL "Debug")
        if (MINGW)
            target_link_options(PinoMaze_game PRIVATE -mconsole)
        elseif(MSVC)
            target_link_options(PinoMaze_game PRIVATE /SUBSYSTEM:CONSOLE)
        endif()
    endif()
else()
    add_executable(PinoMaze_game)
endif()
target_link_libraries(PinoMaze_game PRIVATE PinoMaze_shared sdl2_game)

add_subdirectory(src)
add_subdirectory(resource)